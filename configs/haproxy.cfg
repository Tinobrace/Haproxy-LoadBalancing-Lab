#---------------------------------------------------------------------
# Global Settings
#---------------------------------------------------------------------
global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Limit HAProxy to use a maximum of 2048 concurrent connections
    maxconn 2048

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5s
    timeout client 30s
    timeout server 30s
    retries 3

#---------------------------------------------------------------------
# Frontend Configuration
#---------------------------------------------------------------------
frontend http_front
    mode http
    bind *:80

    # Define multiple backends for different algorithms
    acl use_roundrobin hdr(host) -i roundrobin.example.com
    acl use_leastconn hdr(host) -i leastconn.example.com
    acl use_iphash hdr(host) -i iphash.example.com

    # Route requests based on hostname
    use_backend backend_roundrobin if use_roundrobin
    use_backend backend_leastconn if use_leastconn
    use_backend backend_iphash if use_iphash

    # Default backend
    default_backend backend_roundrobin

    # Enable HAProxy statistics page
    stats enable
    stats uri /haproxy?stats
    stats refresh 5s
    stats realm HAProxy\ Statistics
    stats auth admin:haproxy123

#---------------------------------------------------------------------
# Backend Configurations with Different Load Balancing Algorithms
#---------------------------------------------------------------------

# 1️⃣ **Round-Robin Load Balancing**
backend backend_roundrobin
    mode http
    balance roundrobin  # Distributes requests evenly across servers
    option httpchk GET /health
    timeout connect 5s
    timeout server 30s
    server web1 10.128.0.7:80 check inter 2s rise 3 fall 2
    server web2 10.128.0.6:80 check inter 2s rise 3 fall 2

# 2️⃣ **Least Connections (LeastConn) Load Balancing**
backend backend_leastconn
    mode http
    balance leastconn  # Sends traffic to the server with the fewest connections
    option httpchk GET /health
    timeout connect 5s
    timeout server 30s
    server web1 10.128.0.7:80 check inter 2s rise 3 fall 2
    server web2 10.128.0.6:80 check inter 2s rise 3 fall 2

# 3️⃣ **IP Hash Load Balancing (Source-Based)**
backend backend_iphash
    mode http
    balance source  # Ensures the same client IP always hits the same backend server
    option httpchk GET /health
    timeout connect 5s
    timeout server 30s
    server web1 10.128.0.7:80 check inter 2s rise 3 fall 2
    server web2 10.128.0.6:80 check inter 2s rise 3 fall 2
